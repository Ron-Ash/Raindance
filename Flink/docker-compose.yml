services:
  jobmanager:
    image: flink_sql_with_kafka
    build: .
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        rest.address: 0.0.0.0
        rest.port: 8081
    networks:
      - kafka_default
  taskmanager:
    image: flink_sql_with_kafka
    build: .
    depends_on:
      - jobmanager
    command: taskmanager
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - /host/path/to/job/artifacts:/opt/flink/usrlib
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 100
    networks:
      - kafka_default
  sql-gateway:
    image: flink_sql_with_kafka
    build: .
    command:
      - bin/sql-gateway.sh
      - start-foreground
      - -Dsql-gateway.endpoint.rest.address=0.0.0.0
      - -Dsql-gateway.endpoint.rest.bind-address=0.0.0.0
      - -Dsql-gateway.endpoint.rest.port=8083
      - -Dexecution.target=remote
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        rest.address: jobmanager
        rest.port: 8081
    depends_on:
      - jobmanager
    ports:
      - "8083:8083"
    networks:
      - kafka_default
  sql-client:
    image: flink_sql_with_kafka
    build: .
    command: ["bin/sql-client.sh", "gateway", "-e", "sql-gateway:8083"]
    depends_on:
      - jobmanager
      - sql-gateway
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        rest.address: jobmanager
    networks:
      - kafka_default

networks:
  kafka_default:
    external: true
# docker compose up -d
# docker compose run sql-client
